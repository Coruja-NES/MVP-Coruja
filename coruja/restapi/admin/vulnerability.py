from flask import Blueprint, flash, redirect, render_template, request, url_for
from flask_login import login_required

from ...forms import VulnerabilityForm
from ...models import Vulnerability
from ...utils import database_manager

bp = Blueprint("vulnerability", __name__, url_prefix="/vulnerabilidade")


@bp.route("/", methods=["GET"])
@login_required
def view_vulnerabilities():
    """Visualização das vulnerabilidades"""
    subcategory_id = request.args.get("subcategory_id", None)

    page = request.args.get("page", 1, type=int)
    pagination = Vulnerability.query.filter_by(
        sub_category_id=subcategory_id
    ).paginate(page=page, per_page=10)
    all_vulnerabilities = pagination.items

    return render_template(
        "admin/vulnerabilities.html",
        vulnerabilities=all_vulnerabilities,
        pagination=pagination,
        has_prev_page=pagination.has_prev,
        has_next_page=pagination.has_next,
        subcategory_id=subcategory_id,
    )


@bp.route("/criar", methods=["GET", "POST"])
@login_required
def create_vulnerability():
    subcategory_id = request.args.get("subcategory_id", None)

    form = VulnerabilityForm()
    if form.validate_on_submit():
        # Assumindo que seu formulário tem campos como 'name', 'description', etc.
        name = form.name.data
        description = form.description.data

        # Você pode querer passar mais campos aqui
        database_manager.add_vulnerability(name, description, subcategory_id)  # type: ignore

        flash(f"Vulnerabilidade {name} criada com sucesso.", "success")
        return redirect(
            url_for(
                "admin.vulnerability.view_vulnerabilities",
                subcategory_id=subcategory_id,
            )
        )

    return render_template("admin/create_vulnerability.html", form=form)


@bp.route("/<int:vulnerability_id>/editar", methods=["GET", "POST"])
@login_required
def edit_vulnerability(vulnerability_id: int):
    vulnerability = database_manager.get_vulnerability(vulnerability_id)
    if not vulnerability:
        flash("Vulnerabilidade não encontrada.", "error")
        return redirect(url_for("admin.vulnerability.view_vulnerabilities"))

    form = VulnerabilityForm(obj=vulnerability)
    if form.validate_on_submit():
        form_data = {
            "name": form.name.data,
            "description": form.description.data,
            # Adicione mais campos aqui, se necessário
        }

        updated_vulnerability = database_manager.update_vulnerability(
            vulnerability, form_data  # type: ignore
        )

        if updated_vulnerability:
            flash(
                f"Vulnerabilidade {updated_vulnerability.name} editada com sucesso.",
                "success",
            )
            return redirect(
                url_for("admin.vulnerability.view_vulnerabilities")
            )

    return render_template(
        "admin/edit_vulnerability.html", form=form, vulnerability=vulnerability
    )
