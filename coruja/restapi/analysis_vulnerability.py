from flask import Blueprint, Flask, render_template
from flask_login import login_required

from ..decorators import proxy_access
from ..utils import database_manager

bp = Blueprint(
    "analysis_vulnerability", __name__, url_prefix="/analise-vulnerabilidade"
)


@bp.route("/<int:analysis_vulnerability_id>")
@login_required
# @proxy_access(kind_object="analysis_vulnerability", kind_access="read")
def get_analysis_vulnerability(analysis_vulnerability_id: int):
    """Renderiza detalhes sobre uma determinada Análise de Vulnerabilidade

    Args:
        analysis_vulnerability_id (int): ID da Análise de Vulnerabilidade
    """

    analysis_vulnerability = database_manager.get_analysis_vulnerability(
        analysis_vulnerability_id
    )

    table_info = {
        "O controle existe e é perfeitamente adequado e eficiente": 1,
        "O controle existe, mas a sua adequação e eficiência demandam pequenos ajustes na forma de execução": 2,
        "O controle existe, mas a sua adequação e eficiência demandam razoáveis ajustes na forma de execução": 3,
        "O controle existe, mas a sua adequação e eficiência demandam grandes ajustes na forma de execução": 4,
        "Não existe o controle ou o controle utilizado é completamente inadequado e ineficiente": 5,
        "Não aplicável": "N/A",
    }

    return render_template(
        "analysis_vulnerability/analysis_vulnerability.html",
        analysis_vulnerability=analysis_vulnerability,  # type: ignore
        table_info=table_info,
    )


def init_api(app: Flask) -> None:
    app.register_blueprint(bp)
